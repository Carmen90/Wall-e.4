package tp.pr4.instructions;
import tp.pr4.RobotEngine;
import tp.pr4.NavigationModule;
import tp.pr4.instructions.exceptions.InstructionExecutionException;
import tp.pr4.instructions.exceptions.WrongInstructionFormatException;
import tp.pr4.items.ItemContainer;
/**
 * @author Carmen Acosta Morales y Nerea Ramirez Lamela 
 * Shows the game help with all the instructions that the robot can execute.
 *  This instruction works if the user writes HELP or AYUDA
 *
 */
public class HelpInstruction implements Instruction{
	private RobotEngine robot;
	
	/**
	 * Default constructor
	 */
	public HelpInstruction (){
		this.robot = new RobotEngine ();
	}
	
	/**
	 * Fixes the current context, i.e., the robot engine and the navigation module
	 */
	public void configureContext(RobotEngine engine,
            NavigationModule navigation,
            ItemContainer robotContainer){
		this.robot = engine;
		
	}

	@Override
	public void execute() 
			throws InstructionExecutionException{
		// TODO Auto-generated method stub
		this.robot.requestHelp();
	}

	@Override
	public String getHelp() {
		// TODO Auto-generated method stub
		return "HELP|AYUDA";
	}

	@Override
	public Instruction parse(java.lang.String cad) 
			throws WrongInstructionFormatException{
		cad = cad.trim();//elimina los espacios en blanco.
		
		String [] cadena = cad.split(" ");/*Divide la cadena en espacios
		y guarda cada fragmento en cada posiciï¿½n del array*/
		// TODO Auto-generated method stub
		if(!cadena[0].equalsIgnoreCase("HELP") && !cadena[0].equalsIgnoreCase("AYUDA") 
				|| cadena.length > 1)
		{
			throw new WrongInstructionFormatException();
		}
		else {
			return this;
		}
	}

	@Override
	public void executeVista() throws InstructionExecutionException {
		// TODO Auto-generated method stub
		this.execute();
	}	
}
